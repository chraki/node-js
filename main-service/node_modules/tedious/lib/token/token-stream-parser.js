"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Parser = void 0;

var _events = require("events");

var _streamParser = _interopRequireDefault(require("./stream-parser"));

var _stream = require("stream");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Parser extends _events.EventEmitter {
  constructor(message, debug, options) {
    super();
    this.debug = void 0;
    this.options = void 0;
    this.parser = void 0;
    this.debug = debug;
    this.options = options;
    this.parser = _stream.Readable.from(_streamParser.default.parseTokens(message, this.debug, this.options));
    this.parser.on('data', token => {
      if (token.event) {
        this.emit(token.event, token);
      }
    });
    this.parser.on('drain', () => {
      this.emit('drain');
    });
    this.parser.on('end', () => {
      this.emit('end');
    });
  }

  pause() {
    return this.parser.pause();
  }

  resume() {
    return this.parser.resume();
  }

}

exports.Parser = Parser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2tlbi90b2tlbi1zdHJlYW0tcGFyc2VyLnRzIl0sIm5hbWVzIjpbIlBhcnNlciIsIkV2ZW50RW1pdHRlciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImRlYnVnIiwib3B0aW9ucyIsInBhcnNlciIsIlJlYWRhYmxlIiwiZnJvbSIsIlN0cmVhbVBhcnNlciIsInBhcnNlVG9rZW5zIiwib24iLCJ0b2tlbiIsImV2ZW50IiwiZW1pdCIsInBhdXNlIiwicmVzdW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBOEJBOzs7O0FBR08sTUFBTUEsTUFBTixTQUFxQkMsb0JBQXJCLENBQWtDO0FBS3ZDQyxFQUFBQSxXQUFXLENBQUNDLE9BQUQsRUFBbUJDLEtBQW5CLEVBQWlDQyxPQUFqQyxFQUFxRTtBQUM5RTtBQUQ4RSxTQUpoRkQsS0FJZ0Y7QUFBQSxTQUhoRkMsT0FHZ0Y7QUFBQSxTQUZoRkMsTUFFZ0Y7QUFHOUUsU0FBS0YsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0MsT0FBTCxHQUFlQSxPQUFmO0FBRUEsU0FBS0MsTUFBTCxHQUFjQyxpQkFBU0MsSUFBVCxDQUFjQyxzQkFBYUMsV0FBYixDQUF5QlAsT0FBekIsRUFBa0MsS0FBS0MsS0FBdkMsRUFBOEMsS0FBS0MsT0FBbkQsQ0FBZCxDQUFkO0FBQ0EsU0FBS0MsTUFBTCxDQUFZSyxFQUFaLENBQWUsTUFBZixFQUF3QkMsS0FBRCxJQUFrQjtBQUN2QyxVQUFJQSxLQUFLLENBQUNDLEtBQVYsRUFBaUI7QUFDZixhQUFLQyxJQUFMLENBQVVGLEtBQUssQ0FBQ0MsS0FBaEIsRUFBdUJELEtBQXZCO0FBQ0Q7QUFDRixLQUpEO0FBTUEsU0FBS04sTUFBTCxDQUFZSyxFQUFaLENBQWUsT0FBZixFQUF3QixNQUFNO0FBQzVCLFdBQUtHLElBQUwsQ0FBVSxPQUFWO0FBQ0QsS0FGRDtBQUlBLFNBQUtSLE1BQUwsQ0FBWUssRUFBWixDQUFlLEtBQWYsRUFBc0IsTUFBTTtBQUMxQixXQUFLRyxJQUFMLENBQVUsS0FBVjtBQUNELEtBRkQ7QUFHRDs7QUE4QkRDLEVBQUFBLEtBQUssR0FBRztBQUNOLFdBQU8sS0FBS1QsTUFBTCxDQUFZUyxLQUFaLEVBQVA7QUFDRDs7QUFFREMsRUFBQUEsTUFBTSxHQUFHO0FBQ1AsV0FBTyxLQUFLVixNQUFMLENBQVlVLE1BQVosRUFBUDtBQUNEOztBQTdEc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdldmVudHMnO1xuaW1wb3J0IFN0cmVhbVBhcnNlciBmcm9tICcuL3N0cmVhbS1wYXJzZXInO1xuaW1wb3J0IERlYnVnIGZyb20gJy4uL2RlYnVnJztcbmltcG9ydCB7IEludGVybmFsQ29ubmVjdGlvbk9wdGlvbnMgfSBmcm9tICcuLi9jb25uZWN0aW9uJztcbmltcG9ydCB7XG4gIFRva2VuLFxuICBJbmZvTWVzc2FnZVRva2VuLFxuICBTU1BJVG9rZW4sXG4gIEVycm9yTWVzc2FnZVRva2VuLFxuICBEYXRhYmFzZUVudkNoYW5nZVRva2VuLFxuICBMYW5ndWFnZUVudkNoYW5nZVRva2VuLFxuICBDaGFyc2V0RW52Q2hhbmdlVG9rZW4sXG4gIEZlZEF1dGhJbmZvVG9rZW4sXG4gIEZlYXR1cmVFeHRBY2tUb2tlbixcbiAgTG9naW5BY2tUb2tlbixcbiAgUm91dGluZ0VudkNoYW5nZVRva2VuLFxuICBQYWNrZXRTaXplRW52Q2hhbmdlVG9rZW4sXG4gIEJlZ2luVHJhbnNhY3Rpb25FbnZDaGFuZ2VUb2tlbixcbiAgQ29tbWl0VHJhbnNhY3Rpb25FbnZDaGFuZ2VUb2tlbixcbiAgUm9sbGJhY2tUcmFuc2FjdGlvbkVudkNoYW5nZVRva2VuLFxuICBDb2xNZXRhZGF0YVRva2VuLFxuICBPcmRlclRva2VuLFxuICBSb3dUb2tlbixcbiAgTkJDUm93VG9rZW4sXG4gIFJldHVyblN0YXR1c1Rva2VuLFxuICBSZXR1cm5WYWx1ZVRva2VuLFxuICBEb25lSW5Qcm9jVG9rZW4sXG4gIERvbmVQcm9jVG9rZW4sXG4gIERvbmVUb2tlbixcbiAgQ29sbGF0aW9uQ2hhbmdlVG9rZW5cbn0gZnJvbSAnLi90b2tlbic7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gJ3N0cmVhbSc7XG5pbXBvcnQgTWVzc2FnZSBmcm9tICcuLi9tZXNzYWdlJztcblxuZXhwb3J0IGNsYXNzIFBhcnNlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gIGRlYnVnOiBEZWJ1ZztcbiAgb3B0aW9uczogSW50ZXJuYWxDb25uZWN0aW9uT3B0aW9ucztcbiAgcGFyc2VyOiBSZWFkYWJsZTtcblxuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBNZXNzYWdlLCBkZWJ1ZzogRGVidWcsIG9wdGlvbnM6IEludGVybmFsQ29ubmVjdGlvbk9wdGlvbnMpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5kZWJ1ZyA9IGRlYnVnO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICB0aGlzLnBhcnNlciA9IFJlYWRhYmxlLmZyb20oU3RyZWFtUGFyc2VyLnBhcnNlVG9rZW5zKG1lc3NhZ2UsIHRoaXMuZGVidWcsIHRoaXMub3B0aW9ucykpO1xuICAgIHRoaXMucGFyc2VyLm9uKCdkYXRhJywgKHRva2VuOiBUb2tlbikgPT4ge1xuICAgICAgaWYgKHRva2VuLmV2ZW50KSB7XG4gICAgICAgIHRoaXMuZW1pdCh0b2tlbi5ldmVudCwgdG9rZW4pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5wYXJzZXIub24oJ2RyYWluJywgKCkgPT4ge1xuICAgICAgdGhpcy5lbWl0KCdkcmFpbicpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5wYXJzZXIub24oJ2VuZCcsICgpID0+IHtcbiAgICAgIHRoaXMuZW1pdCgnZW5kJyk7XG4gICAgfSk7XG4gIH1cblxuICBkZWNsYXJlIG9uOiAoXG4gICAgKChldmVudDogJ2luZm9NZXNzYWdlJywgbGlzdGVuZXI6ICh0b2tlbjogSW5mb01lc3NhZ2VUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdlcnJvck1lc3NhZ2UnLCBsaXN0ZW5lcjogKHRva2VuOiBFcnJvck1lc3NhZ2VUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdzc3BpY2hhbGxlbmdlJywgbGlzdGVuZXI6ICh0b2tlbjogU1NQSVRva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ2RhdGFiYXNlQ2hhbmdlJywgbGlzdGVuZXI6ICh0b2tlbjogRGF0YWJhc2VFbnZDaGFuZ2VUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdsYW5ndWFnZUNoYW5nZScsIGxpc3RlbmVyOiAodG9rZW46IExhbmd1YWdlRW52Q2hhbmdlVG9rZW4pID0+IHZvaWQpID0+IHRoaXMpICZcbiAgICAoKGV2ZW50OiAnY2hhcnNldENoYW5nZScsIGxpc3RlbmVyOiAodG9rZW46IENoYXJzZXRFbnZDaGFuZ2VUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdzcWxDb2xsYXRpb25DaGFuZ2UnLCBsaXN0ZW5lcjogKHRva2VuOiBDb2xsYXRpb25DaGFuZ2VUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdmZWRBdXRoSW5mbycsIGxpc3RlbmVyOiAodG9rZW46IEZlZEF1dGhJbmZvVG9rZW4pID0+IHZvaWQpID0+IHRoaXMpICZcbiAgICAoKGV2ZW50OiAnZmVhdHVyZUV4dEFjaycsIGxpc3RlbmVyOiAodG9rZW46IEZlYXR1cmVFeHRBY2tUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdsb2dpbmFjaycsIGxpc3RlbmVyOiAodG9rZW46IExvZ2luQWNrVG9rZW4pID0+IHZvaWQpID0+IHRoaXMpICZcbiAgICAoKGV2ZW50OiAncm91dGluZ0NoYW5nZScsIGxpc3RlbmVyOiAodG9rZW46IFJvdXRpbmdFbnZDaGFuZ2VUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdwYWNrZXRTaXplQ2hhbmdlJywgbGlzdGVuZXI6ICh0b2tlbjogUGFja2V0U2l6ZUVudkNoYW5nZVRva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ2JlZ2luVHJhbnNhY3Rpb24nLCBsaXN0ZW5lcjogKHRva2VuOiBCZWdpblRyYW5zYWN0aW9uRW52Q2hhbmdlVG9rZW4pID0+IHZvaWQpID0+IHRoaXMpICZcbiAgICAoKGV2ZW50OiAnY29tbWl0VHJhbnNhY3Rpb24nLCBsaXN0ZW5lcjogKHRva2VuOiBDb21taXRUcmFuc2FjdGlvbkVudkNoYW5nZVRva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ3JvbGxiYWNrVHJhbnNhY3Rpb24nLCBsaXN0ZW5lcjogKHRva2VuOiBSb2xsYmFja1RyYW5zYWN0aW9uRW52Q2hhbmdlVG9rZW4pID0+IHZvaWQpID0+IHRoaXMpICZcbiAgICAoKGV2ZW50OiAnY29sdW1uTWV0YWRhdGEnLCBsaXN0ZW5lcjogKHRva2VuOiBDb2xNZXRhZGF0YVRva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ29yZGVyJywgbGlzdGVuZXI6ICh0b2tlbjogT3JkZXJUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdyb3cnLCBsaXN0ZW5lcjogKHRva2VuOiBSb3dUb2tlbiB8IE5CQ1Jvd1Rva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ3JldHVyblN0YXR1cycsIGxpc3RlbmVyOiAodG9rZW46IFJldHVyblN0YXR1c1Rva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ3JldHVyblZhbHVlJywgbGlzdGVuZXI6ICh0b2tlbjogUmV0dXJuVmFsdWVUb2tlbikgPT4gdm9pZCkgPT4gdGhpcykgJlxuICAgICgoZXZlbnQ6ICdkb25lJywgbGlzdGVuZXI6ICh0b2tlbjogRG9uZVRva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ2RvbmVJblByb2MnLCBsaXN0ZW5lcjogKHRva2VuOiBEb25lSW5Qcm9jVG9rZW4pID0+IHZvaWQpID0+IHRoaXMpICZcbiAgICAoKGV2ZW50OiAnZG9uZVByb2MnLCBsaXN0ZW5lcjogKHRva2VuOiBEb25lUHJvY1Rva2VuKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogJ2VuZCcsIGxpc3RlbmVyOiAoKSA9PiB2b2lkKSA9PiB0aGlzKSAmXG4gICAgKChldmVudDogc3RyaW5nIHwgc3ltYm9sLCBsaXN0ZW5lcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKSA9PiB0aGlzKVxuICApO1xuXG4gIHBhdXNlKCkge1xuICAgIHJldHVybiB0aGlzLnBhcnNlci5wYXVzZSgpO1xuICB9XG5cbiAgcmVzdW1lKCkge1xuICAgIHJldHVybiB0aGlzLnBhcnNlci5yZXN1bWUoKTtcbiAgfVxufVxuIl19